{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import axios, { GenericAbortSignal, AxiosResponse } from \"axios\";\n\ntype Endpoint = {\n  path: string;\n  get: boolean;\n  post: boolean;\n  put: boolean;\n  delete: boolean;\n};\ntype Methods = {\n  get: boolean;\n  post: boolean;\n  put: boolean;\n  delete: boolean;\n};\nexport type SupportedApis = Record<string, Endpoint[]>;\ntype SupportedVersionMethods = Record<string, Methods>;\n\nexport const ccapi = async (\n  ipAddress: string,\n  signal: GenericAbortSignal | undefined = undefined\n): Promise<AxiosResponse> => {\n  return axios({\n    method: \"get\",\n    url: `http://${ipAddress}/ccapi`,\n    signal: signal,\n  });\n};\n\nexport const Camera = (ipAddress: string, supportedApis: SupportedApis) => {\n  return {\n    topUrlForDev: buildFunction(ipAddress, \"/topUrlForDev\", supportedApis),\n    deviceInformation: buildFunction(\n      ipAddress,\n      \"/deviceinformation\",\n      supportedApis\n    ),\n    storage: buildFunction(ipAddress, \"/devicestatus/storage\", supportedApis),\n    currentStorage: buildFunction(\n      ipAddress,\n      \"/devicestatus/currentstorage\",\n      supportedApis\n    ),\n    currentDirectory: buildFunction(\n      ipAddress,\n      \"/devicestatus/currentdirectory\",\n      supportedApis\n    ),\n    battery: buildFunction(ipAddress, \"/devicestatus/battery\", supportedApis),\n    batteryList: buildFunction(\n      ipAddress,\n      \"/devicestatus/batterylist\",\n      supportedApis\n    ),\n    lens: buildFunction(ipAddress, \"/devicestatus/lens\", supportedApis),\n    temperature: buildFunction(\n      ipAddress,\n      \"/devicestatus/temperature\",\n      supportedApis\n    ),\n    copyright: buildFunction(\n      ipAddress,\n      \"/functions/registeredname/copyright\",\n      supportedApis\n    ),\n    author: buildFunction(\n      ipAddress,\n      \"/functions/registeredname/author\",\n      supportedApis\n    ),\n    ownerName: buildFunction(\n      ipAddress,\n      \"/functions/registeredname/ownername\",\n      supportedApis\n    ),\n    nickName: buildFunction(\n      ipAddress,\n      \"/functions/registeredname/nickname\",\n      supportedApis\n    ),\n    dateTime: buildFunction(ipAddress, \"/functions/datetime\", supportedApis),\n    cardFormat: buildFunction(\n      ipAddress,\n      \"/functions/cardformat\",\n      supportedApis\n    ),\n    beep: buildFunction(ipAddress, \"/functions/beep\", supportedApis),\n    displayOff: buildFunction(\n      ipAddress,\n      \"/functions/displayoff\",\n      supportedApis\n    ),\n    autoPowerOff: buildFunction(\n      ipAddress,\n      \"/functions/autopoweroff\",\n      supportedApis\n    ),\n    sensorCleaning: buildFunction(\n      ipAddress,\n      \"/functions/sensorcleaning\",\n      supportedApis\n    ),\n    networkConnection: buildFunction(\n      ipAddress,\n      \"/functions/networkconnection\",\n      supportedApis\n    ),\n    networkSetting: buildFunction(\n      ipAddress,\n      \"/functions/networksetting\",\n      supportedApis\n    ),\n    currentConnectionSetting: buildFunction(\n      ipAddress,\n      \"/functions/networksetting/currentconnectionsetting\",\n      supportedApis\n    ),\n    connectionSetting: buildFunction(\n      ipAddress,\n      \"/functions/networksetting/connectionsetting\",\n      supportedApis\n    ),\n    connectionSettingSet: buildFunction(\n      ipAddress,\n      \"/functions/networksetting/connectionsetting\",\n      supportedApis\n    ),\n    commSetting: buildFunction(\n      ipAddress,\n      \"/functions/networksetting/commsetting\",\n      supportedApis\n    ),\n    commSettingNw: buildFunction(\n      ipAddress,\n      \"/functions/networksetting/commsetting\",\n      supportedApis\n    ),\n    functionSetting: buildFunction(\n      ipAddress,\n      \"/functions/networksetting/functionsetting\",\n      supportedApis\n    ),\n    functionSettingMode: buildFunction(\n      ipAddress,\n      \"/functions/networksetting/functionsetting\",\n      supportedApis\n    ),\n    wifiConnection: buildFunction(\n      ipAddress,\n      \"/functions/wificonnection\",\n      supportedApis\n    ),\n    wifiSetting: buildFunction(\n      ipAddress,\n      \"/functions/wifisetting\",\n      supportedApis\n    ),\n    wifiSettingSet1: buildFunction(\n      ipAddress,\n      \"/functions/wifisetting/set1\",\n      supportedApis\n    ),\n    wifiSettingSet2: buildFunction(\n      ipAddress,\n      \"/functions/wifisetting/set2\",\n      supportedApis\n    ),\n    wifiSettingSet3: buildFunction(\n      ipAddress,\n      \"/functions/wifisetting/set3\",\n      supportedApis\n    ),\n    caCert: buildFunction(ipAddress, \"/functions/ssl/cacert\", supportedApis),\n    commonName: buildFunction(\n      ipAddress,\n      \"/functions/ssl/servercert/commonname\",\n      supportedApis\n    ),\n    corsSetting: buildFunction(\n      ipAddress,\n      \"/functions/cors/corssetting\",\n      supportedApis\n    ),\n    corsOrigin: buildFunction(\n      ipAddress,\n      \"/functions/cors/origin\",\n      supportedApis\n    ),\n    recordFunctionsSeparate: buildFunction(\n      ipAddress,\n      \"/functions/recordfunctions/separate\",\n      supportedApis\n    ),\n    recordFunctionsStillImage: buildFunction(\n      ipAddress,\n      \"/functions/recordfunctions/stillimage\",\n      supportedApis\n    ),\n    recordFunctionsMovie: buildFunction(\n      ipAddress,\n      \"/functions/recordfunctions/movie\",\n      supportedApis\n    ),\n    cardSelectionStillImage: buildFunction(\n      ipAddress,\n      \"/functions/cardselection/stillimage\",\n      supportedApis\n    ),\n    cardSelectionMovie: buildFunction(\n      ipAddress,\n      \"/functions/cardselection/movie\",\n      supportedApis\n    ),\n    exposureIncrementsAv: buildFunction(\n      ipAddress,\n      \"/customfunction/exposureincrements/av\",\n      supportedApis\n    ),\n    exposureIncrementsTv: buildFunction(\n      ipAddress,\n      \"/customfunction/exposureincrements/tv\",\n      supportedApis\n    ),\n    exposureIncrementsExposure: buildFunction(\n      ipAddress,\n      \"/customfunction/exposureincrements/exposure\",\n      supportedApis\n    ),\n    exposureIncrementsFlashExposure: buildFunction(\n      ipAddress,\n      \"/customfunction/exposureincrements/flashexposure\",\n      supportedApis\n    ),\n    isoIncrements: buildFunction(\n      ipAddress,\n      \"/customfunction/isoincrements\",\n      supportedApis\n    ),\n    contents: buildFunction(ipAddress, \"/contents\", supportedApis),\n    contentsStorage: buildFunction(ipAddress, \"/contents\", supportedApis),\n    contentsStorageDirectory: buildFunction(\n      ipAddress,\n      \"/contents\",\n      supportedApis\n    ),\n    contentsStorageDirectoryFile: buildFunction(\n      ipAddress,\n      \"/contents\",\n      supportedApis\n    ),\n    shutterButton: buildFunction(\n      ipAddress,\n      \"/shooting/control/shutterbutton\",\n      supportedApis\n    ),\n    shutterButtonManual: buildFunction(\n      ipAddress,\n      \"/shooting/control/shutterbutton/manual\",\n      supportedApis\n    ),\n    ignoreShootingModeDialMode: buildFunction(\n      ipAddress,\n      \"/shooting/control/ignoreshootingmodedialmode\",\n      supportedApis\n    ),\n    movieMode: buildFunction(\n      ipAddress,\n      \"/shooting/control/moviemode\",\n      supportedApis\n    ),\n    recButton: buildFunction(\n      ipAddress,\n      \"/shooting/control/recbutton\",\n      supportedApis\n    ),\n    zoom: buildFunction(ipAddress, \"/shooting/control/zoom\", supportedApis),\n    driveFocus: buildFunction(\n      ipAddress,\n      \"/shooting/control/drivefocus\",\n      supportedApis\n    ),\n    autoFocus: buildFunction(ipAddress, \"/shooting/control/af\", supportedApis),\n    flickerDetection: buildFunction(\n      ipAddress,\n      \"/shooting/control/flickerdetection\",\n      supportedApis\n    ),\n    hfFlickerDetection: buildFunction(\n      ipAddress,\n      \"/shooting/control/hfflickerdetection\",\n      supportedApis\n    ),\n    controlHfFlickerTv: buildFunction(\n      ipAddress,\n      \"/shooting/control/hfflickertv\",\n      supportedApis\n    ),\n    shootingSettings: buildFunction(\n      ipAddress,\n      \"/shooting/settings\",\n      supportedApis\n    ),\n    shootingModeDial: buildFunction(\n      ipAddress,\n      \"/shooting/settings/shootingmodedial\",\n      supportedApis\n    ),\n    shootingModeDialMovie: buildFunction(\n      ipAddress,\n      \"/shooting/settings/shootingmodedial/movie\",\n      supportedApis\n    ),\n    shootingMode: buildFunction(\n      ipAddress,\n      \"/shooting/settings/shootingmode\",\n      supportedApis\n    ),\n    apertureValue: buildFunction(\n      ipAddress,\n      \"/shooting/settings/av\",\n      supportedApis\n    ),\n    timeValue: buildFunction(ipAddress, \"/shooting/settings/tv\", supportedApis),\n    iso: buildFunction(ipAddress, \"/shooting/settings/iso\", supportedApis),\n    exposure: buildFunction(\n      ipAddress,\n      \"/shooting/settings/exposure\",\n      supportedApis\n    ),\n    whiteBalance: buildFunction(\n      ipAddress,\n      \"/shooting/settings/wb\",\n      supportedApis\n    ),\n    colorTemperature: buildFunction(\n      ipAddress,\n      \"/shooting/settings/colortemperature\",\n      supportedApis\n    ),\n    autoFocusOperation: buildFunction(\n      ipAddress,\n      \"/shooting/settings/afoperation\",\n      supportedApis\n    ),\n    autoFocusMethod: buildFunction(\n      ipAddress,\n      \"/shooting/settings/afmethod\",\n      supportedApis\n    ),\n    trackingSetting: buildFunction(\n      ipAddress,\n      \"/shooting/settings/trackingsetting\",\n      supportedApis\n    ),\n    shutterMode: buildFunction(\n      ipAddress,\n      \"/shooting/settings/shuttermode\",\n      supportedApis\n    ),\n    stillImageQuality: buildFunction(\n      ipAddress,\n      \"/shooting/settings/stillimagequality\",\n      supportedApis\n    ),\n    stillImageCompressionLarge: buildFunction(\n      ipAddress,\n      \"/shooting/settings/stillimagecompression/large\",\n      supportedApis\n    ),\n    stillImageCompressionMedium: buildFunction(\n      ipAddress,\n      \"/shooting/settings/stillimagecompression/medium\",\n      supportedApis\n    ),\n    stillImageCompressionMedium1: buildFunction(\n      ipAddress,\n      \"/shooting/settings/stillimagecompression/medium1\",\n      supportedApis\n    ),\n    stillImageCompressionMedium2: buildFunction(\n      ipAddress,\n      \"/shooting/settings/stillimagecompression/medium2\",\n      supportedApis\n    ),\n    stillImageCompressionSmall: buildFunction(\n      ipAddress,\n      \"/shooting/settings/stillimagecompression/small\",\n      supportedApis\n    ),\n    stillImageCompressionSmall1: buildFunction(\n      ipAddress,\n      \"/shooting/settings/stillimagecompression/small1\",\n      supportedApis\n    ),\n    stillImageCompressionSmall2: buildFunction(\n      ipAddress,\n      \"/shooting/settings/stillimagecompression/small2\",\n      supportedApis\n    ),\n    hdr: buildFunction(ipAddress, \"/shooting/settings/hdr\", supportedApis),\n    stillImageAspectRatio: buildFunction(\n      ipAddress,\n      \"/shooting/settings/stillimageaspectratio\",\n      supportedApis\n    ),\n    flash: buildFunction(ipAddress, \"/shooting/settings/flash\", supportedApis),\n    metering: buildFunction(\n      ipAddress,\n      \"/shooting/settings/metering\",\n      supportedApis\n    ),\n    drive: buildFunction(ipAddress, \"/shooting/settings/drive\", supportedApis),\n    shootingSpeed: buildFunction(\n      ipAddress,\n      \"/shooting/settings/drive/customhighspeedcont/shootingspeed\",\n      supportedApis\n    ),\n    numberOfShots: buildFunction(\n      ipAddress,\n      \"/shooting/settings/drive/customhighspeedcont/numberofshots\",\n      supportedApis\n    ),\n    autoExposureBracketing: buildFunction(\n      ipAddress,\n      \"/shooting/settings/aeb\",\n      supportedApis\n    ),\n    whiteBalanceShift: buildFunction(\n      ipAddress,\n      \"/shooting/settings/wbshift\",\n      supportedApis\n    ),\n    whiteBalanceBracket: buildFunction(\n      ipAddress,\n      \"/shooting/settings/wbbracket\",\n      supportedApis\n    ),\n    colorSpace: buildFunction(\n      ipAddress,\n      \"/shooting/settings/colorspace\",\n      supportedApis\n    ),\n    pictureStyle: buildFunction(\n      ipAddress,\n      \"/shooting/settings/picturestyle\",\n      supportedApis\n    ),\n    pictureStyleAuto: buildFunction(\n      ipAddress,\n      \"/shooting/settings/picturestyle/auto\",\n      supportedApis\n    ),\n    pictureStyleStandard: buildFunction(\n      ipAddress,\n      \"/shooting/settings/picturestyle/standard\",\n      supportedApis\n    ),\n    pictureStylePortrait: buildFunction(\n      ipAddress,\n      \"/shooting/settings/picturestyle/portrait\",\n      supportedApis\n    ),\n    pictureStyleLandscape: buildFunction(\n      ipAddress,\n      \"/shooting/settings/picturestyle/landscape\",\n      supportedApis\n    ),\n    pictureStyleFineDetail: buildFunction(\n      ipAddress,\n      \"/shooting/settings/picturestyle/finedetail\",\n      supportedApis\n    ),\n    pictureStyleNeutral: buildFunction(\n      ipAddress,\n      \"/shooting/settings/picturestyle/neutral\",\n      supportedApis\n    ),\n    pictureStyleFaithful: buildFunction(\n      ipAddress,\n      \"/shooting/settings/picturestyle/faithful\",\n      supportedApis\n    ),\n    pictureStyleMonochrome: buildFunction(\n      ipAddress,\n      \"/shooting/settings/picturestyle/monochrome\",\n      supportedApis\n    ),\n    pictureStyleUserDef1: buildFunction(\n      ipAddress,\n      \"/shooting/settings/picturestyle/userdef1\",\n      supportedApis\n    ),\n    pictureStyleUserDef2: buildFunction(\n      ipAddress,\n      \"/shooting/settings/picturestyle/userdef2\",\n      supportedApis\n    ),\n    pictureStyleUserDef3: buildFunction(\n      ipAddress,\n      \"/shooting/settings/picturestyle/userdef3\",\n      supportedApis\n    ),\n    basePictureStyleUserDef1: buildFunction(\n      ipAddress,\n      \"/shooting/settings/picturestyle/userdef1/basepicturestyle\",\n      supportedApis\n    ),\n    basePictureStyleUserDef2: buildFunction(\n      ipAddress,\n      \"/shooting/settings/picturestyle/userdef2/basepicturestyle\",\n      supportedApis\n    ),\n    basePictureStyleUserDef3: buildFunction(\n      ipAddress,\n      \"/shooting/settings/picturestyle/userdef3/basepicturestyle\",\n      supportedApis\n    ),\n    antiFlickerShoot: buildFunction(\n      ipAddress,\n      \"/shooting/settings/antiflickershoot\",\n      supportedApis\n    ),\n    hfAntiFlickerShoot: buildFunction(\n      ipAddress,\n      \"/shooting/settings/hfantiflickershoot\",\n      supportedApis\n    ),\n    settingsHfFlickerTv: buildFunction(\n      ipAddress,\n      \"/shooting/settings/hfflickertv\",\n      supportedApis\n    ),\n    focusBracketing: buildFunction(\n      ipAddress,\n      \"/shooting/settings/focusbracketing\",\n      supportedApis\n    ),\n    focusBracketingNumberOfShots: buildFunction(\n      ipAddress,\n      \"/shooting/settings/focusbracketing/numberofshots\",\n      supportedApis\n    ),\n    focusBracketingFocusIncrement: buildFunction(\n      ipAddress,\n      \"/shooting/settings/focusbracketing/focusincrement\",\n      supportedApis\n    ),\n    focusBracketingExposureSmoothing: buildFunction(\n      ipAddress,\n      \"/shooting/settings/focusbracketing/exposuresmoothing\",\n      supportedApis\n    ),\n    movieQuality: buildFunction(\n      ipAddress,\n      \"/shooting/settings/moviequality\",\n      supportedApis\n    ),\n    highFramerate: buildFunction(\n      ipAddress,\n      \"/shooting/settings/highframerate\",\n      supportedApis\n    ),\n    movieCropping: buildFunction(\n      ipAddress,\n      \"/shooting/settings/moviecropping\",\n      supportedApis\n    ),\n    movieFormat: buildFunction(\n      ipAddress,\n      \"/shooting/settings/movieformat\",\n      supportedApis\n    ),\n    soundRecording: buildFunction(\n      ipAddress,\n      \"/shooting/settings/soundrecording\",\n      supportedApis\n    ),\n    soundRecordingLevel: buildFunction(\n      ipAddress,\n      \"/shooting/settings/soundrecording/level\",\n      supportedApis\n    ),\n    soundRecordingWindFilter: buildFunction(\n      ipAddress,\n      \"/shooting/settings/soundrecording/windfilter\",\n      supportedApis\n    ),\n    soundRecordingAttenuator: buildFunction(\n      ipAddress,\n      \"/shooting/settings/soundrecording/attenuator\",\n      supportedApis\n    ),\n    recordable: buildFunction(\n      ipAddress,\n      \"/shooting/information/recordable\",\n      supportedApis\n    ),\n    liveView: buildFunction(ipAddress, \"/shooting/liveview\", supportedApis),\n    liveViewFlip: buildFunction(\n      ipAddress,\n      \"/shooting/liveview/flip\",\n      supportedApis\n    ),\n    liveViewFlipDetail: buildFunction(\n      ipAddress,\n      \"/shooting/liveview/flipdetail\",\n      supportedApis\n    ),\n    liveViewScroll: buildFunction(\n      ipAddress,\n      \"/shooting/liveview/scroll\",\n      supportedApis\n    ),\n    liveViewScrollDetail: buildFunction(\n      ipAddress,\n      \"/shooting/liveview/scrolldetail\",\n      supportedApis\n    ),\n    liveViewMultipart: buildFunction(\n      ipAddress,\n      \"/shooting/liveview/multipart\",\n      supportedApis\n    ),\n    liveViewRtpSessionDescription: buildFunction(\n      ipAddress,\n      \"/shooting/liveview/rtpsessiondesc\",\n      supportedApis\n    ),\n    liveViewRtp: buildFunction(\n      ipAddress,\n      \"/shooting/liveview/rtp\",\n      supportedApis\n    ),\n    liveViewAngleInfo: buildFunction(\n      ipAddress,\n      \"/shooting/liveview/angleinformation\",\n      supportedApis\n    ),\n    liveViewAutoFocusFramePosition: buildFunction(\n      ipAddress,\n      \"/shooting/liveview/afframeposition\",\n      supportedApis\n    ),\n    liveViewClickWhiteBalance: buildFunction(\n      ipAddress,\n      \"/shooting/liveview/clickwb\",\n      supportedApis\n    ),\n    opticalFinderAutoFocusAreaSelectionMode: buildFunction(\n      ipAddress,\n      \"/shooting/opticalfinder/afareaselectionmode\",\n      supportedApis\n    ),\n    opticalFinderAutoFocusAreaSelection: buildFunction(\n      ipAddress,\n      \"/shooting/opticalfinder/afareaselection\",\n      supportedApis\n    ),\n    opticalFinderAutoFocusFrameInfo: buildFunction(\n      ipAddress,\n      \"/shooting/opticalfinder/afframeinformation\",\n      supportedApis\n    ),\n    opticalFinderAutoFocusAreaInfo: buildFunction(\n      ipAddress,\n      \"/shooting/opticalfinder/afareainformation\",\n      supportedApis\n    ),\n    polling: buildFunction(ipAddress, \"/event/polling\", supportedApis),\n    monitoring: buildFunction(ipAddress, \"/event/monitoring\", supportedApis),\n  };\n};\n\ntype GetOptions = {\n  paths?: string[] | [];\n  params?: Object | null;\n  signal?: GenericAbortSignal | undefined;\n};\ntype PostOptions = {\n  paths?: string[] | [];\n  params?: Object | null;\n  data?: Object | {};\n  signal?: GenericAbortSignal | undefined;\n};\ntype PutOptions = {\n  paths?: string[] | [];\n  params?: Object | null;\n  data?: Object | {};\n  signal?: GenericAbortSignal | undefined;\n};\ntype DeleteOptions = {\n  paths?: string[] | [];\n  params?: Object | null;\n  signal?: GenericAbortSignal | undefined;\n};\n\nconst buildFunction = (\n  ipAddress: string,\n  path: string,\n  supportedApis: SupportedApis\n) => {\n  const buildUrl = (\n    ipAddress: string,\n    version: string,\n    path: string,\n    paths: string[] | []\n  ) => {\n    let result = `http://${ipAddress}/ccapi/${version}${path}`;\n    if (paths) {\n      for (let p of paths) {\n        result = result.concat(`/${p}`);\n      }\n    }\n    return result;\n  };\n  const versions = Object.keys(supportedApis);\n  if (versions.length === 0) throw new Error(\"supportedApis is empty\");\n  let supportedVersions: string[] = [];\n  let supportedVersionMethods: SupportedVersionMethods = {};\n  for (let version of versions) {\n    const endpoints = supportedApis[version];\n    for (let endpoint of endpoints) {\n      if (endpoint.path.split(version).pop() === path) {\n        supportedVersions.push(version);\n        supportedVersionMethods[version] = {\n          get: endpoint.get,\n          post: endpoint.post,\n          put: endpoint.put,\n          delete: endpoint.delete,\n        };\n        break;\n      }\n    }\n  }\n  supportedVersions.sort();\n  if (supportedVersions.length === 0) {\n    return {\n      supported: () => false,\n      versions: () => [],\n      versionMethods: () => {},\n      path: () => \"\",\n      get: (\n        version: string,\n        { paths = [], params = null, signal = undefined }: GetOptions = {}\n      ) => Promise.reject(new Error(\"get not supported\")),\n      post: (\n        version: string,\n        {\n          paths = [],\n          params = null,\n          data = {},\n          signal = undefined,\n        }: PostOptions = {}\n      ) => Promise.reject(new Error(\"post not supported\")),\n      put: (\n        version: string,\n        {\n          paths = [],\n          params = null,\n          data = {},\n          signal = undefined,\n        }: PutOptions = {}\n      ) => Promise.reject(new Error(\"put not supported\")),\n      delete: (\n        version: string,\n        { paths = [], params = null, signal = undefined }: DeleteOptions = {}\n      ) => Promise.reject(new Error(\"delete not supported\")),\n    };\n  }\n\n  return {\n    supported: (): boolean => true,\n    versions: (): string[] => supportedVersions,\n    versionMethods: () => supportedVersionMethods,\n    path: () => path,\n    get: (\n      version: string,\n      { paths = [], params = null, signal = undefined }: GetOptions = {}\n    ): Promise<AxiosResponse> => {\n      const url = buildUrl(ipAddress, version, path, paths);\n      return axios({\n        method: \"get\",\n        url: url,\n        params: params,\n        signal: signal,\n      });\n    },\n    post: (\n      version: string,\n      {\n        paths = [],\n        params = null,\n        data = {},\n        signal = undefined,\n      }: PostOptions = {}\n    ): Promise<AxiosResponse> => {\n      const url = buildUrl(ipAddress, version, path, paths);\n      return axios({\n        method: \"post\",\n        url: url,\n        params: params,\n        data: data,\n        signal: signal,\n      });\n    },\n    put: (\n      version: string,\n      {\n        paths = [],\n        params = null,\n        data = {},\n        signal = undefined,\n      }: PutOptions = {}\n    ): Promise<AxiosResponse> => {\n      const url = buildUrl(ipAddress, version, path, paths);\n      return axios({\n        method: \"put\",\n        url: url,\n        params: params,\n        data: data,\n        signal: signal,\n      });\n    },\n    delete: (\n      version: string,\n      { paths = [], params = null, signal = undefined }: DeleteOptions = {}\n    ): Promise<AxiosResponse> => {\n      const url = buildUrl(ipAddress, version, path, paths);\n      return axios({\n        method: \"delete\",\n        url: url,\n        params: params,\n        signal: signal,\n      });\n    },\n  };\n};\n"],"mappings":"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","names":["ipAddress","path"]}